{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "availabilitySetName": {
        "type": "string"
      },
      "adminUsername": {
        "type": "string"
      },
      "vmName": {
        "type": "string"
      },
      "vmSize": {
        "type": "string"
      },
      "vnetRGName": {
        "type": "string"
      },
      "vnetName": {
        "type": "string"
      },
      "subnetName": {
        "type": "string"
      },
      "adminPassword": {
        "type": "securestring"
      },
      "domainFQDN": {
        "type": "string"
      },
      "domainAdminPassword": {
        "type": "securestring"
      },
      "storageaccountName": {
        "type": "string",
        "metadata": {
          "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
        },
        "defaultValue": ""
      },
      "storageaccountNameRGName": {
        "type": "string"
      },
      "OMSWorkspaceRGName": {
        "type": "string"
      },
      "OMSWorkspaceName": {
        "type": "string"
      },
      "ouPath": {
          "type": "string"
      },
      "dnsLabelPrefix": {
          "type": "string"
      },
      "lbName": {
          "type": "string"
      }
    },
    "variables": {
      "vnetID": "[resourceid(parameters('vnetRGName'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
      "subnetID": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
      "nicName": "[concat(parameters('vmName'),'-NIC')]",
      "OSDiskName": "[concat(parameters('vmName'),'-OSDisk')]",
      "publicIPName": "[concat(parameters('vmName'), '-PIP')]",
      "osPublisher": "MicrosoftWindowsServer",
      "osOffer": "WindowsServer",
      "osSku": "2016-Datacenter-Server-Core-smalldisk",
      "customScriptFileName": "installWindowsAdminCenter.ps1",
      "customScriptCommandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -file ',variables('customScriptFileName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2018-04-01",
        "location": "[resourceGroup().location]",
        "name": "[variables('publicIPName')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
              "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },
      {
        "name": "[parameters('availabilitySetName')]",
        "type": "Microsoft.Compute/availabilitySets",
        "apiVersion": "2018-04-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [],
        "properties": {
          "platformUpdateDomainCount": 20,
          "platformFaultDomainCount": 3
        },
        "sku": {
          "name": "aligned"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[parameters('lbName')]",
        "dependsOn": [
            "[variables('publicIPName')]"
        ],
        "location": "[resourceGroup().location]",
        "properties": {
          "frontendIPConfigurations": [
            {
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName'))]"
                }                
              },
              "name": "LoadBalancerFrontendPublic"
            }            
          ],
          "backendAddressPools": [
            {
              "name": "winadmincenter-backend"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/frontendIpConfigurations/LoadBalancerFrontendPublic')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/backendAddressPools/winadmincenter-backend')]"
                },
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('lbName')), '/probes/lbprobe-443')]"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "idleTimeoutInMinutes": 15
              },
              "Name": "lbrule-tcp443-public"
            }           
          ],
          "probes": [{
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe-443"
          }]
        },
        "resources": [
          {
            "type": "providers/diagnosticSettings",
            "name": "[concat('Microsoft.Insights/',parameters('lbName'),'-diagnostics')]",
            "apiVersion": "2017-05-01-preview",
            "dependsOn": ["[resourceid('Microsoft.Network/loadBalancers',parameters('lbName'))]"],
            "properties": {
              "name": "[concat(parameters('lbName'),'-diagnostics')]",
              "workspaceId": "[resourceid(parameters('OMSworkspaceRGName'),'Microsoft.OperationalInsights/workspaces',parameters('OMSworkspaceName'))]",
              "logs": [ 
                {
                  "category": "LoadBalancerAlertEvent",
                  "enabled": true,
                  "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                  }
                },
                {
                  "category": "LoadBalancerProbeHealthStatus",
                  "enabled": true,
                  "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                  }
                }
              ]
            }
          }
        ]
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2018-04-01",
        "name": "[variables('nicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[parameters('lbName')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetID')]"
                },
                "loadBalancerBackendAddressPools": [
                    {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('lbName')), '/backendAddressPools/winadmincenter-backend')]"
                    }
                  ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2018-04-01",
        "name": "[parameters('vmName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
          "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('osPublisher')]",
              "offer": "[variables('osOffer')]",
              "sku": "[variables('osSku')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[variables('OSDiskName')]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2017-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('VMName'),'/joindomain')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('VMName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "Name": "[parameters('domainFQDN')]",
            "OUPath": "[parameters('ouPath')]",
            "User": "[concat(parameters('domainFQDN'), '\\', parameters('adminUsername'))]",
            "Restart": "true",
            "Options": "3"
          },
          "protectedSettings": {
            "Password": "[parameters('domainAdminPassword')]"
          }
        }
      },
      {
        "apiVersion": "2017-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('VMName'),'/cse')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId(resourcegroup().name,'Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'joindomain')]"
        ],
        "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                    "[concat(reference(resourceid(parameters('storageaccountNameRGName'),'Microsoft.Storage/storageAccounts',parameters('storageaccountName')),'2017-10-01').primaryEndpoints['blob'],'cse/installWindowsAdminCenter.ps1')]"
                ]
            },
            "protectedSettings": {
                "commandToExecute": "[variables('customScriptCommandToExecute')]",
                "storageAccountName": "[parameters('storageaccountName')]",
                "storageAccountKey": "[listKeys(resourceid(parameters('storageaccountNameRGName'),'Microsoft.Storage/storageAccounts',parameters('storageaccountName')),'2017-10-01').keys[0].value]"
            }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'),'/OMSExtension')]",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId(resourcegroup().name,'Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'cse')]"
        ],
        "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "workspaceId": "[reference(resourceid(parameters('OMSWorkspaceRGName'),'Microsoft.OperationalInsights/workspaces',parameters('OMSWorkspaceName')),'2015-11-01-preview').customerId]"
            },
            "protectedSettings": {
                "workspaceKey": "[listkeys(resourceid(parameters('OMSWorkspaceRGName'),'Microsoft.OperationalInsights/workspaces',parameters('OMSWorkspaceName')),'2015-11-01-preview').primarySharedKey]"
            }
        }
    }
    ],
    "outputs": {}
  }